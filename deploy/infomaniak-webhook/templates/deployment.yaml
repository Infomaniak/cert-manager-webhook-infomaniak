apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "infomaniak-webhook.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "infomaniak-webhook.name" . }}
    chart: {{ include "infomaniak-webhook.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "infomaniak-webhook.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "infomaniak-webhook.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "infomaniak-webhook.fullname" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.debug.enabled }}
          command:
          - /start.sh
          args:
            - dlv
            - --listen=:{{ .Values.debug.port }}
            - --accept-multiclient
            - --api-version=2
            - --headless=true
            - exec
            - /usr/local/bin/webhook
            - --
          {{- else }}
          args:
          {{- end }}
            - --v=2
            - --tls-cert-file=/tls/tls.crt
            - --tls-private-key-file=/tls/tls.key
          env:
            - name: GROUP_NAME
              value: {{ .Values.groupName | quote }}
            {{- with .Values.http_proxy }}
            - name: HTTP_PROXY
              value: {{ . }}
            {{- end }}
            {{- with .Values.https_proxy }}
            - name: HTTPS_PROXY
              value: {{ . }}
            {{- end }}
            {{- with .Values.no_proxy }}
            - name: NO_PROXY
              value: {{ . }}
            {{- end }}
          ports:
            - name: https
              containerPort: 443
              protocol: TCP
          {{- if not .Values.debug.enabled }}
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /healthz
              port: https
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /healthz
              port: https
          {{- end }}
          volumeMounts:
            - name: certs
              mountPath: /tls
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: certs
          secret:
            secretName: {{ include "infomaniak-webhook.servingCertificate" . }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
    {{- end }}
